problem :- Given an array arr[] that contains positive and negative integers (may contain 0 as well). Find the maximum product that we can get in a subarray of arr.
Note: It is guaranteed that the output fits in a 32-bit integer.
code:- int maxProduct(vector<int> &arr) {
        // Your Code Here
         int n = arr.size();
    int maxEndingHere = arr[0], minEndingHere = arr[0], maxSoFar = arr[0];
    for (int i = 1; i < n; ++i) {
        if (arr[i] < 0) swap(maxEndingHere, minEndingHere);
        maxEndingHere = max(arr[i], maxEndingHere * arr[i]);
        minEndingHere = min(arr[i], minEndingHere * arr[i]);
        maxSoFar = max(maxSoFar, maxEndingHere);
    }
    return maxSoFar;
    }
